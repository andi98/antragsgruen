{"version":3,"sources":["installation/InitDb.ts"],"names":["InitDb","$form","this","$testDBcaller","find","dbTestUrl","data","$","on","prop","val","attr","click","testDb","bind","gotoLanguageVariant","prototype","ev","href","window","location","split","value","$pending","$success","$error","$createTables","csrf","params","sqlType","sqlHost","sqlUsername","sqlPassword","sqlDB","_csrf","removeClass","addClass","post","ret","text","fail","err","alert","status","responseText","exports"],"mappings":"yGAAA,IAAAA,EAAA,WAGI,SAAAA,EAAoBC,GAAAC,KAAAD,MAAAA,EAChB,IAAIE,EAAgBF,EAAMG,KAAK,iBAC/BF,KAAKG,UAAYF,EAAcG,KAAK,OAEpCC,EAAE,gBAAgBC,GAAG,QAAS,WAC1BD,EAAE,oBAAoBE,KAAK,WAAW,KAE1CF,EAAE,oBAAoBC,GAAG,SAAU,WAC3BD,EAAEL,MAAMO,KAAK,YACbF,EAAE,gBAAgBG,IAAI,IAAIC,KAAK,cAAe,MAItDR,EAAcS,MAAMV,KAAKW,OAAOC,KAAKZ,OACV,IAAvBK,EAAE,YAAYG,OAA0C,IAA3BH,EAAE,gBAAgBG,OAC/CP,EAAcS,QAGlBL,EAAE,aAAaC,GAAG,wBAAyBN,KAAKa,oBAAoBD,KAAKZ,OAgDjF,OA7CYF,EAAAgB,UAAAD,oBAAR,SAA4BE,EAAIX,GAC5B,IAAIY,EAAOC,OAAOC,SAASF,KAAKG,MAAM,KAAK,GAC3CH,GAAQ,aAAeZ,EAAKgB,MAC5BH,OAAOC,SAASF,KAAOA,GAGnBlB,EAAAgB,UAAAH,OAAR,WACI,IAAIU,EAAWhB,EAAE,mBACbiB,EAAWjB,EAAE,kBACbkB,EAASlB,EAAE,gBACXmB,EAAgBnB,EAAE,iBAClBoB,EAAOpB,EAAE,qBAAqBG,MAC9BkB,GACIC,QAAWtB,EAAE,uBAAuBG,MACpCoB,QAAWvB,EAAE,uBAAuBG,MACpCqB,YAAexB,EAAE,2BAA2BG,MAC5CsB,YAAezB,EAAE,2BAA2BG,MAC5CuB,MAAS1B,EAAE,qBAAqBG,MAChCwB,MAASP,GAEbpB,EAAE,+BAA+BE,KAAK,aACtCmB,EAAwB,gBAAI,GAEhCL,EAASY,YAAY,UACrBV,EAAOW,SAAS,UAChBZ,EAASY,SAAS,UAElB7B,EAAE8B,KAAKnC,KAAKG,UAAWuB,EAAQ,SAAUU,GACjCA,EAAa,SACbd,EAASW,YAAY,UACjBG,EAAoB,eACpBZ,EAAcU,SAAS,kBAEvBV,EAAcS,YAAY,oBAG9BV,EAAOU,YAAY,UACnBV,EAAOrB,KAAK,WAAWmC,KAAKD,EAAW,OACvCZ,EAAcS,YAAY,mBAE9BZ,EAASa,SAAS,YACnBI,KAAK,SAASC,GACbC,MAAM,+BAAiCD,EAAIE,OAAS,MAAQF,EAAIG,iBAG5E5C,EArEA,GAAa6C,EAAA7C,OAAAA","file":"InitDb.js","sourcesContent":["export class InitDb {\n    private dbTestUrl: string;\n\n    constructor(private $form: JQuery) {\n        let $testDBcaller = $form.find(\".testDBcaller\");\n        this.dbTestUrl = $testDBcaller.data('url');\n\n        $('#sqlPassword').on('keyup', function () {\n            $('#sqlPasswordNone').prop('checked', false);\n        });\n        $('#sqlPasswordNone').on('change', function () {\n            if ($(this).prop('checked')) {\n                $('#sqlPassword').val('').attr('placeholder', '');\n            }\n        });\n\n        $testDBcaller.click(this.testDb.bind(this));\n        if ($('#sqlHost').val() != '' || $('#sqlPassword').val() != '') {\n            $testDBcaller.click();\n        }\n\n        $(\"#language\").on('changed.fu.selectlist', this.gotoLanguageVariant.bind(this));\n    }\n\n    private gotoLanguageVariant(ev, data) {\n        let href = window.location.href.split('?')[0];\n        href += '?language=' + data.value;\n        window.location.href = href;\n    }\n\n    private testDb() {\n        let $pending = $('.testDBRpending'),\n            $success = $('.testDBsuccess'),\n            $error = $('.testDBerror'),\n            $createTables = $('.createTables'),\n            csrf = $('input[name=_csrf]').val(),\n            params = {\n                'sqlType': $(\"input[name=sqlType]\").val(),\n                'sqlHost': $(\"input[name=sqlHost]\").val(),\n                'sqlUsername': $(\"input[name=sqlUsername]\").val(),\n                'sqlPassword': $(\"input[name=sqlPassword]\").val(),\n                'sqlDB': $(\"input[name=sqlDB]\").val(),\n                '_csrf': csrf\n            };\n        if ($(\"input[name=sqlPasswordNone]\").prop(\"checked\")) {\n            params['sqlPasswordNone'] = 1;\n        }\n        $pending.removeClass('hidden');\n        $error.addClass('hidden');\n        $success.addClass('hidden');\n\n        $.post(this.dbTestUrl, params, function (ret) {\n            if (ret['success']) {\n                $success.removeClass('hidden');\n                if (ret['alreadyCreated']) {\n                    $createTables.addClass('alreadyCreated');\n                } else {\n                    $createTables.removeClass('alreadyCreated');\n                }\n            } else {\n                $error.removeClass('hidden');\n                $error.find('.result').text(ret['error']);\n                $createTables.removeClass('alreadyCreated');\n            }\n            $pending.addClass('hidden');\n        }).fail(function(err) {\n            alert(\"An internal error occurred: \" + err.status + \" / \" + err.responseText);\n        });\n    }\n}\n"]}