{"version":3,"sources":["backend/SiteAccess.ts"],"names":["SiteAccess","this","initSite","initUsers","prototype","$","find","change","prop","removeClass","addClass","trigger","click","$button","$form","parents","first","bootbox","confirm","__t","result","id","data","append","submit","show","hide","ev","text","val","indexOf","alert","preventDefault","emails","split","names","length"],"mappings":"AAAA,IAAAA,WAAA,WACI,SAAAA,IACIC,KAAKC,WACLD,KAAKE,YAsEb,OAnEYH,EAAAI,UAAAF,SAAR,WACoBG,EAAE,qBACRC,KAAK,mCAAmCC,OAAO,WACjDF,EAAEJ,MAAMO,KAAK,WACbH,EAAE,iBAAiBI,YAAY,UAE/BJ,EAAE,iBAAiBK,SAAS,YAEjCC,QAAQ,UAGXN,EAAE,gBAAgBO,MAAM,WACpB,IAAIC,EAAUR,EAAEJ,MACZa,EAAQT,EAAEJ,MAAMc,QAAQ,QAAQC,QACpCC,QAAQC,QAAQC,IAAI,QAAS,sBAAuB,SAAUC,GAC1D,GAAIA,EAAQ,CACR,IAAIC,EAAKR,EAAQS,KAAK,MACtBR,EAAMS,OAAO,kDAAoDF,EAAK,MACtEP,EAAMU,cAKlBnB,EAAE,8BAA8BE,OAAO,WAC/BF,EAAEJ,MAAMO,KAAK,WACbH,EAAE,qBAAqBoB,OAEvBpB,EAAE,qBAAqBqB,SAE5Bf,QAAQ,WAGPX,EAAAI,UAAAD,UAAR,WACIE,EAAE,uBAAuBmB,OAAO,SAAUG,GACtC,IAAIC,EAAOvB,EAAE,cAAcwB,OACO,GAA9BD,EAAKE,QAAQ,eACbb,QAAQc,MAAMZ,IAAI,QAAS,qBAC3BQ,EAAGK,mBAEwB,GAA3BJ,EAAKE,QAAQ,YACbb,QAAQc,MAAMZ,IAAI,QAAS,qBAC3BQ,EAAGK,kBAGP,IAAIC,EAAS5B,EAAE,mBAAmBwB,MAAMK,MAAM,MAC1CC,EAAQ9B,EAAE,UAAUwB,MAAMK,MAAM,MACf,GAAjBD,EAAOG,QAA4B,IAAbH,EAAO,KAC7BN,EAAGK,iBACHf,QAAQc,MAAMZ,IAAI,QAAS,oBAE3Bc,EAAOG,QAAUD,EAAMC,SACvBnB,QAAQc,MAAMZ,IAAI,QAAS,wBAC3BQ,EAAGK,oBAIX3B,EAAE,yDAAyDE,OAAO,WACzDF,EAAEJ,MAAMO,KAAK,YACdH,EAAEJ,MAAMc,QAAQ,MAAMC,QAAQV,KAAK,yCAAyCE,KAAK,WAAW,KAGpGH,EAAE,2DAA2DE,OAAO,WAC5DF,EAAEJ,MAAMO,KAAK,YACbH,EAAEJ,MAAMc,QAAQ,MAAMC,QAAQV,KAAK,uCAAuCE,KAAK,WAAW,MAI1GR,EAzEA,GA2EA,IAAIA","file":"SiteAccess.js","sourcesContent":["class SiteAccess {\n    constructor() {\n        this.initSite();\n        this.initUsers();\n    }\n\n    private initSite() {\n        let $siteForm = $(\"#siteSettingsForm\");\n        $siteForm.find(\".loginMethods .namespaced input\").change(function () {\n            if ($(this).prop(\"checked\")) {\n                $(\"#accountsForm\").removeClass(\"hidden\");\n            } else {\n                $(\"#accountsForm\").addClass(\"hidden\");\n            }\n        }).trigger(\"change\");\n\n\n        $(\".removeAdmin\").click(function () {\n            let $button = $(this),\n                $form = $(this).parents(\"form\").first();\n            bootbox.confirm(__t(\"admin\", \"removeAdminConfirm\"), function (result) {\n                if (result) {\n                    let id = $button.data(\"id\");\n                    $form.append('<input type=\"hidden\" name=\"removeAdmin\" value=\"' + id + '\">');\n                    $form.submit();\n                }\n            });\n        });\n\n        $(\".managedUserAccounts input\").change(function () {\n            if ($(this).prop(\"checked\")) {\n                $(\".showManagedUsers\").show();\n            } else {\n                $(\".showManagedUsers\").hide();\n            }\n        }).trigger(\"change\");\n    }\n\n    private initUsers() {\n        $(\"#accountsCreateForm\").submit(function (ev) {\n            let text = $(\"#emailText\").val();\n            if (text.indexOf(\"%ACCOUNT%\") == -1) {\n                bootbox.alert(__t(\"admin\", \"emailMissingCode\"));\n                ev.preventDefault();\n            }\n            if (text.indexOf(\"%LINK%\") == -1) {\n                bootbox.alert(__t(\"admin\", \"emailMissingLink\"));\n                ev.preventDefault();\n            }\n\n            let emails = $(\"#emailAddresses\").val().split(\"\\n\"),\n                names = $(\"#names\").val().split(\"\\n\");\n            if (emails.length == 1 && emails[0] == \"\") {\n                ev.preventDefault();\n                bootbox.alert(__t(\"admin\", \"emailMissingTo\"));\n            }\n            if (emails.length != names.length) {\n                bootbox.alert(__t(\"admin\", \"emailNumberMismatch\"));\n                ev.preventDefault();\n            }\n        });\n\n        $('.accountListTable .accessViewCol input[type=checkbox]').change(function () {\n            if (!$(this).prop(\"checked\")) {\n                $(this).parents('tr').first().find('.accessCreateCol input[type=checkbox]').prop('checked', false);\n            }\n        });\n        $('.accountListTable .accessCreateCol input[type=checkbox]').change(function () {\n            if ($(this).prop(\"checked\")) {\n                $(this).parents('tr').first().find('.accessViewCol input[type=checkbox]').prop('checked', true);\n            }\n        });\n    }\n}\n\nnew SiteAccess();\n"]}