{"version":3,"sources":["frontend/MotionEditForm.ts"],"names":["MotionEditForm","$form","this","hasChanged","$","datetimepicker","locale","attr","format","each","initWysiwyg","bind","initPlainTextFormGroup","$draftHint","draftMotionType","data","draftMotionId","DraftSavingEngine_1","DraftSavingEngine","on","window","off","onLeavePage","__t","prototype","i","el","_this","$textarea","find","editor","AntragsgruenEditor_1","AntragsgruenEditor","parents","submit","parent","val","getEditor","getData","hasClass","$fieldset","$input","maxLen_1","maxLenSoft_1","$warning_1","$submit_1","first","$currCounter_1","currLen","length","text","removeClass","prop","addClass","trigger","exports"],"mappings":"0KAGA,IAAAA,EAAA,WAGI,SAAAA,EAAoBC,GAAAC,KAAAD,MAAAA,EAFZC,KAAAC,YAAsB,EAG1BC,EAAE,qBAAqBC,gBACnBC,OAAQF,EAAE,QAAQG,KAAK,QACvBC,OAAQ,MAGZJ,EAAE,qBAAqBK,KAAKP,KAAKQ,YAAYC,KAAKT,OAClDE,EAAE,0BAA0BK,KAAKP,KAAKU,uBAAuBD,KAAKT,OAElE,IAAIW,EAAaT,EAAE,cACfU,EAAkBD,EAAWE,KAAK,eAClCC,EAAgBH,EAAWE,KAAK,aAEpC,IAAIE,EAAAC,kBAAkBjB,EAAOY,EAAY,UAAYC,EAAkB,IAAME,GAE7Ef,EAAMkB,GAAG,SAAU,WACff,EAAEgB,QAAQC,IAAI,eAAgBrB,EAAesB,eAyDzD,OArDkBtB,EAAAsB,YAAd,WACI,OAAOC,IAAI,MAAO,uBAGdvB,EAAAwB,UAAAd,YAAR,SAAoBe,EAAGC,GAAvB,IAAAC,EAAAzB,KAEQ0B,EADUxB,EAAEsB,GACQG,KAAK,eACzBC,EAAS,IAAIC,EAAAC,mBAAmBJ,EAAUrB,KAAK,OAEnDqB,EAAUK,QAAQ,QAAQC,OAAO,WAC7BN,EAAUO,SAASN,KAAK,YAAYO,IAAIN,EAAOO,YAAYC,aAE/DR,EAAOO,YAAYlB,GAAG,SAAU,WACvBQ,EAAKxB,aACNwB,EAAKxB,YAAa,EACbC,EAAE,QAAQmC,SAAS,YACpBnC,EAAEgB,QAAQD,GAAG,eAAgBnB,EAAesB,iBAMpDtB,EAAAwB,UAAAZ,uBAAR,SAA+Ba,EAAGC,GAC9B,IAAIc,EAAYpC,EAAEsB,GACde,EAASD,EAAUX,KAAK,sBAC5B,GAAiC,GAA7BW,EAAUzB,KAAK,WAAiB,CAChC,IAAI2B,EAASF,EAAUzB,KAAK,WACxB4B,GAAa,EACbC,EAAWJ,EAAUX,KAAK,kBAC1BgB,EAAUL,EAAUP,QAAQ,QAAQa,QAAQjB,KAAK,uBACjDkB,EAAeP,EAAUX,KAAK,wBAC9Ba,EAAS,IACTC,GAAa,EACbD,IAAU,GAGdD,EAAOtB,GAAG,eAAgB,WACtB,IAAI6B,EAAUP,EAAOL,MAAMa,OAC3BF,EAAaG,KAAKF,GACdA,EAAUN,GACVE,EAASO,YAAY,UAChBR,GACDE,EAAQO,KAAK,YAAY,KAG7BR,EAASS,SAAS,UACbV,GACDE,EAAQO,KAAK,YAAY,MAGlCE,QAAQ,YAGvBtD,EA5EA,GAAauD,EAAAvD,eAAAA","file":"MotionEditForm.js","sourcesContent":["import {DraftSavingEngine} from \"../shared/DraftSavingEngine\";\nimport {AntragsgruenEditor} from \"../shared/AntragsgruenEditor\";\n\nexport class MotionEditForm {\n    private hasChanged: boolean = false;\n\n    constructor(private $form: JQuery) {\n        $(\".input-group.date\").datetimepicker({\n            locale: $(\"html\").attr('lang'),\n            format: 'L'\n        });\n\n        $(\".wysiwyg-textarea\").each(this.initWysiwyg.bind(this));\n        $(\".form-group.plain-text\").each(this.initPlainTextFormGroup.bind(this));\n\n        let $draftHint = $(\"#draftHint\"),\n            draftMotionType = $draftHint.data(\"motion-type\"),\n            draftMotionId = $draftHint.data(\"motion-id\");\n\n        new DraftSavingEngine($form, $draftHint, \"motion_\" + draftMotionType + \"_\" + draftMotionId);\n\n        $form.on(\"submit\", () => {\n            $(window).off(\"beforeunload\", MotionEditForm.onLeavePage);\n        });\n    }\n\n    public static onLeavePage(): string {\n        return __t(\"std\", \"leave_changed_page\");\n    }\n\n    private initWysiwyg(i, el) {\n        let $holder = $(el),\n            $textarea = $holder.find(\".texteditor\"),\n            editor = new AntragsgruenEditor($textarea.attr(\"id\"));\n\n        $textarea.parents(\"form\").submit(function () {\n            $textarea.parent().find(\"textarea\").val(editor.getEditor().getData());\n        });\n        editor.getEditor().on('change', () => {\n            if (!this.hasChanged) {\n                this.hasChanged = true;\n                if (!$(\"body\").hasClass('testing')) {\n                    $(window).on(\"beforeunload\", MotionEditForm.onLeavePage);\n                }\n            }\n        });\n    }\n\n    private initPlainTextFormGroup(i, el) {\n        let $fieldset = $(el),\n            $input = $fieldset.find(\"input.form-control\");\n        if ($fieldset.data(\"max-len\") != 0) {\n            let maxLen = $fieldset.data(\"max-len\"),\n                maxLenSoft = false,\n                $warning = $fieldset.find('.maxLenTooLong'),\n                $submit = $fieldset.parents(\"form\").first().find(\"button[type=submit]\"),\n                $currCounter = $fieldset.find(\".maxLenHint .counter\");\n            if (maxLen < 0) {\n                maxLenSoft = true;\n                maxLen = -1 * maxLen;\n            }\n\n            $input.on('keyup change', () => {\n                let currLen = $input.val().length;\n                $currCounter.text(currLen);\n                if (currLen > maxLen) {\n                    $warning.removeClass('hidden');\n                    if (!maxLenSoft) {\n                        $submit.prop(\"disabled\", true);\n                    }\n                } else {\n                    $warning.addClass('hidden');\n                    if (!maxLenSoft) {\n                        $submit.prop(\"disabled\", false);\n                    }\n                }\n            }).trigger('change');\n        }\n    }\n}\n"]}